TAREAS:

-Tendremos una clase general "Server" de la que dependeran la clases "Client" y "Channel".








FILE SERVER:

-Su destructor deberia eliminar los containers de "Client" y 'Channel" que se hayan creado. Ojo a la memoria dinamica.

-Implementar los comandos de AUTENTICACION (PASS, NICH, USER) en su orden.
	Ayudara tener un status del proceso de autentificacion, que se podria hacer con un enum de estados 
		enum AuthStatus 
		NOT_REGISTERED,
		PASS_OK,
		NICK_OK,
		USER_OK,
		REGISTERED

-Gestionar la SALIDA LIMPIA DEL PROGRAMA (Shutdown graceful): SIGINT(Ctrl+C), SIGTERM(kill <pid>)
	-Implementar el manejo de las senyales con un signalhandler()  
	C++98 solo garantiza que puedes modificar de forma segura variables de tipo volatile sig_atomic_t dentro de un handler.
	 En el handler llamar a un m√©todo Server::stop() o Server::shutdown() que:
		Cierre el socket de escucha.
		Cierre los sockets de todos los clientes conectados.
		Limpie estructuras (vectores, buffers, etc).
		Luego hacer exit(0) o dejar que main() termine.

-


